{"ast":null,"code":"var _jsxFileName = \"/Users/yeonjk/Desktop/git/React Study/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useTransition, useDeferredValue } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet arr = new Array(10000).fill('');\nfunction App() {\n  _s();\n  let [name, setName] = useState('');\n  let [isPending, startTransition] = useTransition();\n  let state = useDeferredValue(state); // opposite to useTransition\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        startTransition(() => {\n          setName(e.target.value);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), isPending ? 'now loading...' : arr.map(() => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this);\n    }) /**  if state 'name' has changed, this div components rendering must be performed again. */\n    /** When users use a website, they perceive the website negatively if the response rate is slower than 0.2 seconds.  */\n    /** When you must print more than 10000, slowing issue resolution : \n     *  1. It is also a way to divide 1,000 pieces and show them on different pages.\n     *  2. use useTransition. (react 18) : New function in React 18 version for innovative performance improvements.\n     *     a cause of delay  : setName(e.target.value) \n     *     Wrap state with startTransition.\n     *  ★★★★★It improves speed by processing the code covered in 'startTransition' a little late.\n     *  'isPending' changed to True when 'startTransition' is still processing.\n    */]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0zINrKPfyibCCmpiHHsaSDYBLbY=\", false, function () {\n  return [useTransition, useDeferredValue];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useTransition","useDeferredValue","jsxDEV","_jsxDEV","arr","Array","fill","App","_s","name","setName","isPending","startTransition","state","className","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/yeonjk/Desktop/git/React Study/test/src/App.js"],"sourcesContent":["import { useState, useTransition, useDeferredValue } from \"react\";\n\nlet arr = new Array(10000).fill('');\n\nfunction App() {\n\n  let [name, setName] = useState('');\n  let [isPending, startTransition] = useTransition();  \n  let state = useDeferredValue(state); // opposite to useTransition\n\n  return (\n    <div className=\"App\">\n      <input onChange={(e)=>{ \n        startTransition(()=> {\n          setName(e.target.value) \n        })\n      }}/>\n      { /** The value entered by the user in the input box will be stored in the state 'name'.  */ }\n      {/* In case of performance degradation... for examples I made a lot of <div> components...  */}\n      {\n        isPending ? 'now loading...' : \n        arr.map(()=> {\n          return <div>{ name }</div>\n        }) /**  if state 'name' has changed, this div components rendering must be performed again. */\n        /** When users use a website, they perceive the website negatively if the response rate is slower than 0.2 seconds.  */\n        /** When you must print more than 10000, slowing issue resolution : \n         *  1. It is also a way to divide 1,000 pieces and show them on different pages.\n         *  2. use useTransition. (react 18) : New function in React 18 version for innovative performance improvements.\n         *     a cause of delay  : setName(e.target.value) \n         *     Wrap state with startTransition.\n         *  ★★★★★It improves speed by processing the code covered in 'startTransition' a little late.\n         *  'isPending' changed to True when 'startTransition' is still processing.\n        */\n      }\n    </div>\n  );\n}\n\nexport default App;\n  "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAI,CAACY,SAAS,EAAEC,eAAe,CAAC,GAAGZ,aAAa,CAAC,CAAC;EAClD,IAAIa,KAAK,GAAGZ,gBAAgB,CAACY,KAAK,CAAC,CAAC,CAAC;;EAErC,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAOa,QAAQ,EAAGC,CAAC,IAAG;QACpBL,eAAe,CAAC,MAAK;UACnBF,OAAO,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QACzB,CAAC,CAAC;MACJ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAIFZ,SAAS,GAAG,gBAAgB,GAC5BP,GAAG,CAACoB,GAAG,CAAC,MAAK;MACX,oBAAOrB,OAAA;QAAAY,QAAA,EAAON;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAC5B,CAAC,CAAC,CAAC;IACH;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAPQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASC,CAAC;AAEV;AAACf,EAAA,CAhCQD,GAAG;EAAA,QAGyBP,aAAa,EACpCC,gBAAgB;AAAA;AAAAwB,EAAA,GAJrBlB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}